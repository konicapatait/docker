plugins {
	id 'org.springframework.boot' version '2.2.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'com.bmuschko.docker-remote-api' version '3.2.5'
	id 'war'
}

group = 'com.myspring.template'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

apply plugin: 'idea'
apply plugin: 'eclipse'

project.ext.tagName = "springdockergradletemplate" // It should be all lower case

repositories {
	mavenCentral()
}
repositories {
	maven { name = "DISH Artifactory"; url = "https://artifactory.global.dish.com/artifactory/repo" }
	maven { name = "IT Maven"; url = "http://it-maven/content/repositories/m2repo/" }
}

docker {
	registryCredentials {
		username = getConfigurationProperty('DOCKER_USERNAME', 'docker.username')
		password = getConfigurationProperty('DOCKER_PASSWORD', 'docker.password')
		email = getConfigurationProperty('DOCKER_EMAIL', 'docker.email')

	}
}

String getConfigurationProperty(String envVar, String sysProp) {
	System.getenv(envVar) ?: project.findProperty(sysProp)
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

task createDockerfile(type: Dockerfile) {
	destFile = project.file('build/docker/Dockerfile')
	from 'openjdk:8-jre-alpine'
	maintainer 'Konica patait "konicapatait@gmail.com"'
	copyFile war.archiveName, '/app/SpringDockerGradleTemplate.war'
	entryPoint 'java'
	defaultCommand '-jar', '/app/SpringDockerGradleTemplate.war'
	exposePort 8080
	runCommand 'apk --update --no-cache add curl'
	instruction 'HEALTHCHECK CMD curl -f http://localhost:8080/health || exit 1'
}

task syncWebAppArchive(type: Sync) {
	dependsOn assemble
	from war.archivePath
	into createDockerfile.destFile.parentFile
}

createDockerfile.dependsOn syncWebAppArchive

task buildImage(type: DockerBuildImage) {
	group = 'Docker'
	description 'Executes bootRepackage, generates a docker file and builds image from it'
	dependsOn createDockerfile
	inputDir = createDockerfile.destFile.parentFile
	tag = "${tagName}"
}


task pushImage(type: DockerPushImage) {
	description = 'Push docker image to repo'
	dependsOn buildImage
	imageName = "konicapatait/springdockergradletemplate"
	tag = "latest"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
